{"version":3,"sources":["components/hooks/useForm.js","components/types/types.js","components/firebase/firebase-config.js","components/actions/ui.js","components/helpers/fileUpload.js","components/helpers/loadNotes.js","components/actions/notes.js","components/actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/routers/PrivateRouter.js","components/routers/PublicRouter.js","components/routers/AppRouter.js","components/reducer/uiReducer.js","components/reducer/notesReducer.js","components/store/store.js","components/reducer/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setvalues","reset","newFormState","handleInputChange","target","name","value","types","firebaseConfig","apiKey","process","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","err","type","payload","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","loadNotes","uid","collection","get","noteSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFireStore","doc","update","refreshNote","Swal","fire","title","deleteNote","satartLoginPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","loggedOut","LoginScreen","useDispatch","loading","useSelector","state","ui","className","onSubmit","preventDefault","placeholder","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","autoComplete","AuthRouter","exact","path","component","excat","NotesAppBar","active","style","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","delete","noteDeleted","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","PrivateRouter","isAuthenticated","Component","rest","props","PublicRouter","AppRouter","checking","setChecking","isLoggedIn","setisLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.52ffae51.chunk.js","sourcesContent":["import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setvalues] = useState(initialState)\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setvalues( newFormState );\r\n    }\r\n\r\n   const handleInputChange = ({ target }) => {\r\n\r\n        setvalues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return [values, handleInputChange, reset]\r\n}","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[NOTES] New note',\r\n    notesActive: '[NOTES] Set active note',\r\n    notesLoad: '[NOTES] Load Notes',\r\n    notesUpdated: '[NOTES] Updated note',\r\n    notesFileUrl: '[NOTES] Updated imagen url',\r\n    notesDelete: '[NOTES] Deleted note',\r\n    notesLogoutCleaning: '[NOTES] Logout Cleaning'\r\n}\r\n\r\n","import firebase  from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\n  export {\r\n      db,\r\n      firebase,\r\n      googleAuthProvider\r\n  }","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dvguy/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file', file );\r\n    \r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const noteSnap = await db.collection(`${uid}/journal/notes`).get()\r\n\r\n    const notes = [];\r\n\r\n    noteSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n    return notes;\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n//react-journal\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => { //el segundo argumento puede tener cualquier nombre y sirve para obtener el state\r\n        \r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        try {\r\n            const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n\r\n            dispatch( activeNote( doc.id, newNote ))\r\n            dispatch( addNewNote( doc.id, newNote ) );    \r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n      \r\n    };\r\n};\r\n\r\n\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n});\r\n\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch( setNotes(notes) );\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => { \r\n    return async (dispatch, getState) =>{ //acciones con return () => {} es porque son asincronos, este manda info a la db y usa el dispatch de tunk  \r\n        \r\n        const { uid } = getState().auth;\r\n        \r\n        if(!note.url){\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFireStore = {...note};\r\n        delete noteToFireStore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFireStore);\r\n\r\n        dispatch( refreshNote (note.id, noteToFireStore));\r\n\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n\r\n\r\n        const fileUrl = await fileUpload(file)\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote(activeNote) );\r\n\r\n        \r\n\r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const noteDeleted = (id) => {\r\n    return async (dispatch, getState) => {\r\n        \r\n        const uid = getState().auth.uid;\r\n\r\n        //console.log(`${uid}/journal/notes/${id}`)\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete()\r\n\r\n        dispatch( deleteNote(id) );\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { types } from \"../types/types\"\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config'\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2';\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const satartLoginPassword = (email, password) => {\r\n    return (dispatch) =>{\r\n        dispatch(startLoading())\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(({user}) => {\r\n            dispatch(login(user.uid, user.displayName));\r\n            dispatch(finishLoading());\r\n        }).catch(e =>{\r\n            dispatch(finishLoading())\r\n            Swal.fire('Error', e.message, 'error')\r\n        })\r\n    };\r\n};\r\n\r\n//La funcion de arriba lo que hace es que si no se recibe una accion que regrese un objeto como el de abajo\r\n//va a retener la infromacion hasta que se lo indiquemos mediante el otro dispatch\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then( async ({user}) => {\r\n            \r\n            await user.updateProfile({displayName: name})\r\n\r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            );\r\n        });\r\n    };\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n        .then( ({user}) => {\r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            )\r\n        })\r\n    }\r\n}\r\nexport const login = (uid, displayName) =>{\r\n    return{\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => { \r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(loggedOut());\r\n        dispatch(noteLogout())\r\n    }\r\n}\r\n\r\nexport const loggedOut = () =>({\r\n    type: types.logout\r\n})","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { satartLoginPassword, startGoogleLogin } from '../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading} = useSelector(state => state.ui);\r\n\r\n    const [values, handleInputChange ] = useForm({\r\n        email: 'inmenso@gmail.com',\r\n        password: 'kurapika'\r\n    });\r\n\r\n    const {email, password} = values;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(satartLoginPassword(email, password)) //este dispatch pasa como parametro la func login que a su vez tiene como parametro el uid y el nombre\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn\">\r\n                <input\r\n                   type=\"text\"\r\n                   placeholder=\"email\"\r\n                   name=\"email\"\r\n                   className=\"auth__input\"\r\n                   value = {email}\r\n                   onChange = {handleInputChange} \r\n\r\n                />\r\n\r\n                <input\r\n                   className=\"auth__input\"\r\n                   type=\"password\"\r\n                   placeholder=\"password\"\r\n                   name=\"password\"\r\n                   value = {password}\r\n                   onChange = {handleInputChange} \r\n\r\n                />\r\n\r\n                <button\r\n                   className=\"btn btn-primary btn-block\"\r\n                   type=\"submit\"\r\n                   disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n \r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                    Create New Account\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../hooks/useForm'\r\nimport validator from 'validator'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { removeError, setError } from '../actions/ui'; //estas son mis acciones\r\nimport { startRegisterWithEmailPasswordName } from '../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const {msgError} = useSelector(state => state.ui);\r\n\r\n    const init = {\r\n        name:'',\r\n        email: 'fer@hotmail.com',\r\n        password: '',\r\n        password2:''\r\n    };\r\n\r\n    const [values, handleInputChange] = useForm(init);\r\n\r\n    const {name, email, password, password2} = values;\r\n\r\n\r\n    const isFormValid = () =>{\r\n\r\n        if(name.trim().length === 0){\r\n            dispatch(setError(\"Name is required\"));\r\n            return false;\r\n        }else if(!validator.isEmail(email)){    \r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        }else if ( password !== password2){\r\n            dispatch(setError('Password should match each other'));\r\n            return false;\r\n        }else if(password.length < 5){\r\n            dispatch(setError('Password should be at least 5 characters and'))\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(isFormValid()){\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form onSubmit = {handleRegister} className=\"animate__animated animate__fadeIn\">\r\n\r\n               { \r\n                msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n               }\r\n\r\n                <input\r\n                   type=\"text\"\r\n                   placeholder=\"name\"\r\n                   name=\"name\"\r\n                   className=\"auth__input\"\r\n                   onChange={handleInputChange}\r\n                   autoComplete=\"off\"\r\n                />\r\n\r\n                <input\r\n                   type=\"text\"\r\n                   placeholder=\"email\"\r\n                   name=\"email\"\r\n                   className=\"auth__input\"\r\n                   onChange={handleInputChange}\r\n                   autoComplete=\"off\"\r\n                />\r\n\r\n                <input\r\n                   type=\"password\"\r\n                   placeholder=\"password\"\r\n                   name=\"password\"\r\n                   className=\"auth__input\"\r\n                   onChange={handleInputChange}\r\n                   autoComplete=\"off\"\r\n                />\r\n\r\n                <input\r\n                   type=\"password\"\r\n                   placeholder=\"password2\"\r\n                   name=\"password2\"\r\n                   className=\"auth__input\"\r\n                   onChange={handleInputChange}\r\n                   autoComplete=\"off\"\r\n                />\r\n\r\n                <button\r\n                   className=\"btn btn-primary btn-block .mb-5\"\r\n                   type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                \r\n \r\n                <Link to=\"/auth/login\" className=\"link\">\r\n                    Already register?\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../auth/LoginScreen'\r\nimport { RegisterScreen } from '../auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                    <Route excat path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) );\r\n    }\r\n\r\n    const handlePicture = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]\r\n\r\n        if(file){\r\n            dispatch(startUploading(file))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"notes__appbar\">\r\n\r\n            <span>13 de Septiembre 1995</span>\r\n\r\n            <input \r\n                type='file' \r\n                id='fileSelector'\r\n                name='file'\r\n                style={{display: 'none'}} \r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button className=\"btn\" onClick={handlePicture}>\r\n                    Picture\r\n                </button>\r\n\r\n                <button className=\"btn\" onClick={handleSave}>\r\n                    Save\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, noteDeleted } from '../actions/notes';\r\nimport { useForm } from '../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {active:note} = useSelector(state => state.notes);\r\n\r\n    const [formValues, handleInputChange, reset ] = useForm(note)\r\n    const {body, title, id} = formValues;\r\n\r\n    const activeId = useRef(note.id); //activeID es la antigua\r\n\r\n    useEffect(() => {\r\n        if ( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset]) ;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( activeNote( formValues.id, {...formValues}) );\r\n    }, [formValues, dispatch]);\r\n\r\n\r\n\r\n    const handleDelte = () => {\r\n        dispatch(noteDeleted(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar/>\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                   type=\"text\"\r\n                   placeholder=\"A new idea?\"\r\n                   className=\"notes__title-input\"\r\n                   onChange={handleInputChange}\r\n                   name='title'\r\n                   value={title}\r\n                />\r\n\r\n                <textarea\r\n                   placeholder=\"What happened today\"\r\n                   className=\"notes__textarea\"\r\n                   onChange={handleInputChange}\r\n                   name='body'\r\n                   value={body}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) && //Si la nota.url existe (o si el url existe) poner la foto\r\n                    (\r\n                        <div className=\"notes__image\"> \r\n                            {console.log('imagen en la db')}\r\n                            <img \r\n                                src={ note.url }\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <div className=\"btn btn-danger\" onClick={handleDelte}>\r\n                Delete\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activeNote } from '../actions/notes'\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const activated = () =>{\r\n        dispatch( activeNote(id, {\r\n            date, title, body, url\r\n        }) );\r\n    }\r\n\r\n    const noteDate = moment(date);\r\n        return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn\" onClick={activated}>\r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"jorunal__picture\" \r\n                    style={{\r\n                        backgroundSize: 'cover', \r\n                        backgroundImage: `url(${url})`\r\n                    }}>\r\n                </div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('ddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const {notes} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__entires\" >\r\n            {\r\n                notes.map( note =>(\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../actions/auth';\r\nimport { startNewNote } from '../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    const {name} = useSelector( state => state.auth);\r\n\r\n    const handleAddEntry = () => {\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>{name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                  className=\"btn\"\r\n                  onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal_new-entry\"\r\n                onClick={handleAddEntry}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"/>\r\n                <p className=\"mt-5\">\r\n                    New Entry\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <JournalEntries/>\r\n            \r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn\">\r\n\r\n            <Sidebar/>\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen/>)\r\n                        : (<NothingSelected/>)\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) =>(\r\n                (isAuthenticated)\r\n                ? (<Component {...props}/>)\r\n                : (<Redirect to=\"/auth/login\"/>)\r\n            )}\r\n        />\r\n            \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) =>(\r\n                (!isAuthenticated)\r\n                ? (<Component {...props}/>)\r\n                : (<Redirect to=\"/\"/>)\r\n            )}\r\n        />\r\n            \r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n  } from \"react-router-dom\";\r\nimport { JournalScreen } from '../journal/JournalScreen';\r\nimport {firebase} from '../firebase/firebase-config'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRouter } from './PrivateRouter';\r\nimport { PublicRouter } from './PublicRouter';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setisLoggedIn] = useState(false);\r\n\r\n\r\n    useEffect(() =>{\r\n       \r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n\r\n            if ( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setisLoggedIn( true );\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            } else {\r\n                setisLoggedIn( false );\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        });\r\n    },[dispatch, setChecking, setisLoggedIn]);\r\n\r\n    //EL CODIGO DE ARRIBA LOGRA QUE SI TENEMOS UN USUARIO YA REGISTRADO NO SE BORRE AL RECARGAR LA PAGINA\r\n\r\n    if (checking){\r\n        return(            \r\n          <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRouter isAuthenticated={isLoggedIn} path=\"/auth\" component= {AuthRouter}/>\r\n                    <PrivateRouter isAuthenticated={isLoggedIn} exact path=\"/\" component={JournalScreen}/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n            \r\n        \r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.notesActive: \r\n            return{\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        \r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware,compose} from 'redux'\r\nimport { authReducer } from '../reducer/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducer/uiReducer';\r\nimport { notesReducer } from '../reducer/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n//Lo de arriba nos habilita las extesiones del dev tools y poder usar middelwares\r\n\r\nconst reducers = combineReducers({ //este objeto tendra la estructura que queramos que tenga nuestro store en general\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\n\r\nexport const store = createStore(\r\n   reducers,\r\n   composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\n//Esta configuración ayuda a hacer acciones asincronas- explicación en el video 236\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n// el estado estara vacio cuando no este autenticado\r\n\r\nexport const authReducer = (state = {}, action )=>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n           return state;\r\n    }\r\n}","import React from 'react'\r\nimport { AppRouter } from './components/routers/AppRouter'\r\nimport { Provider } from 'react-redux' //es como el context baja la info a los niveles inferiores\r\nimport { store } from './components/store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './sytles/styles.scss'\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}